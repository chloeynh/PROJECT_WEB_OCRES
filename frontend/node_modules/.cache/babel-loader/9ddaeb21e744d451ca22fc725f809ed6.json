{"ast":null,"code":"var _jsxFileName = \"/Users/chloe/Documents/Cours/ING4/Techno Web/PROJECT_WEB_OCRES/frontend/src/components/meteo/Meteo.jsx\";\nimport React from 'react';\nimport \"./Meteo.css\";\nimport Weather from './weather';\nimport Form from '../../parametres';\nconst API_key = \"923b8b8bfbca71d0369fd0505d99dcf4\";\n\nclass Meteo extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n\n      if (city) {\n        const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&appid=\").concat(API_key));\n        const response = await api_call.json();\n        console.log(response);\n        this.setState({\n          city: response.name,\n          celsius: this.calCelsius(response.main.temp),\n          temp_min: this.calCelsius(response.main.temp_min),\n          temp_max: this.calCelsius(response.main.temp_max),\n          description: response.weather[0].description\n        });\n        this.get_WeatherIcon(this.icon, response.weather[0].id);\n      } else {\n        this.setState({\n          error: true\n        });\n      }\n    };\n\n    this.state = {};\n    this.state = {\n      city: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false\n    };\n    this.getWeather();\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    };\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  get_WeatherIcon(icon, rangeID) {\n    switch (true) {\n      case rangeID >= 200 && rangeID <= 232:\n        this.setState({\n          icon: this.weatherIcon.Thunderstorm\n        });\n        break;\n\n      case rangeID >= 300 && rangeID <= 321:\n        this.setState({\n          icon: this.weatherIcon.Drizzle\n        });\n        break;\n\n      case rangeID >= 500 && rangeID <= 531:\n        this.setState({\n          icon: this.weatherIcon.Rain\n        });\n        break;\n\n      case rangeID >= 600 && rangeID <= 622:\n        this.setState({\n          icon: this.weatherIcon.Snow\n        });\n        break;\n\n      case rangeID >= 701 && rangeID <= 781:\n        this.setState({\n          icon: this.weatherIcon.Atmosphere\n        });\n        break;\n\n      case rangeID === 800:\n        this.setState({\n          icon: this.weatherIcon.Clear\n        });\n        break;\n\n      case rangeID >= 801 && rangeID <= 804:\n        this.setState({\n          icon: this.weatherIcon.Clouds\n        });\n        break;\n\n      default:\n        this.setState({\n          icon: this.weatherIcon.Clouds\n        });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      city: this.state.city,\n      celsius: this.state.celsius,\n      temp_min: this.state.temp_min,\n      temp_max: this.state.temp_max,\n      description: this.state.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Meteo;","map":{"version":3,"sources":["/Users/chloe/Documents/Cours/ING4/Techno Web/PROJECT_WEB_OCRES/frontend/src/components/meteo/Meteo.jsx"],"names":["React","Weather","Form","API_key","Meteo","Component","constructor","getWeather","e","preventDefault","city","target","elements","value","api_call","fetch","response","json","console","log","setState","name","celsius","calCelsius","main","temp","temp_min","temp_max","description","weather","get_WeatherIcon","icon","id","error","state","undefined","weatherIcon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","cell","Math","floor","rangeID","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport \"./Meteo.css\"\nimport Weather from './weather';\nimport Form from '../../parametres';\n\nconst API_key = \"923b8b8bfbca71d0369fd0505d99dcf4\"\n\nclass Meteo extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false\n    }\n\n    this.getWeather();\n\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    }\n\n\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  get_WeatherIcon(icon, rangeID) {\n    switch (true) {\n      case rangeID >= 200 && rangeID <= 232:\n        this.setState({ icon: this.weatherIcon.Thunderstorm })\n        break;\n      case rangeID >= 300 && rangeID <= 321:\n        this.setState({ icon: this.weatherIcon.Drizzle })\n        break;\n      case rangeID >= 500 && rangeID <= 531:\n        this.setState({ icon: this.weatherIcon.Rain })\n        break;\n      case rangeID >= 600 && rangeID <= 622:\n        this.setState({ icon: this.weatherIcon.Snow })\n        break;\n      case rangeID >= 701 && rangeID <= 781:\n        this.setState({ icon: this.weatherIcon.Atmosphere })\n        break;\n      case rangeID === 800:\n        this.setState({ icon: this.weatherIcon.Clear })\n        break;\n      case rangeID >= 801 && rangeID <= 804:\n        this.setState({ icon: this.weatherIcon.Clouds })\n        break;\n      default:\n        this.setState({ icon: this.weatherIcon.Clouds })\n    }\n  }\n\n  getWeather = async (e) => {\n\n    e.preventDefault();\n\n    const city = e.target.elements.city.value;\n\n    if (city) {\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_key}`);\n\n      const response = await api_call.json();\n  \n      console.log(response);\n  \n      this.setState({\n        city: response.name,\n        celsius: this.calCelsius(response.main.temp),\n        temp_min: this.calCelsius(response.main.temp_min),\n        temp_max: this.calCelsius(response.main.temp_max),\n        description: response.weather[0].description,\n      });\n  \n      this.get_WeatherIcon(this.icon, response.weather[0].id);\n    }\n    else {\n      this.setState({error:true})\n    }\n\n\n  };\n\n  state = {}\n  render() {\n    return (\n      <div>\n        <Form />\n        <Weather city={this.state.city}\n          celsius={this.state.celsius}\n          temp_min={this.state.temp_min}\n          temp_max={this.state.temp_max}\n          description={this.state.description}\n\n        /></div>\n\n    );\n  }\n}\n\n\nexport default Meteo;\n\n"]},"metadata":{},"sourceType":"module"}