{"ast":null,"code":"var _jsxFileName = \"/Users/chloe/Documents/Cours/ING4/Techno Web/PROJECT_WEB_OCRES/frontend/src/components/meteo/Meteo.jsx\";\nimport React from 'react';\nimport \"./Meteo.css\";\nimport Weather from './weather';\nconst API_key = \"923b8b8bfbca71d0369fd0505d99dcf4\";\n\nclass Meteo extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async () => {\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=Paris&appid=\".concat(API_key));\n      const response = await api_call.json();\n      console.log(response);\n      this.setState({\n        city: response.name,\n        celsius: this.calCelsius(response.main.temp),\n        temp_min: this.calCelsius(response.main.temp_min),\n        temp_max: this.calCelsius(response.main.temp_max),\n        description: response.weather[0].description\n      });\n      this.get_WeatherIcon(this.weatherIcon, response.weather[0].id);\n    };\n\n    this.state = {};\n    this.state = {\n      city: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\"\n    };\n    this.getWeather();\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    };\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  get_WeatherIcon(icons, rangeID) {\n    switch (true) {\n      case rangeID >= 200 && rangeID <= 232:\n        this.setState({\n          icon: this.weatherIcon.Thunderstorm\n        });\n        break;\n\n      case rangeID >= 300 && rangeID <= 321:\n        this.setState({\n          icon: this.weatherIcon.Drizzle\n        });\n        break;\n\n      case rangeID >= 500 && rangeID <= 531:\n        this.setState({\n          icon: this.weatherIcon.Rain\n        });\n        break;\n\n      case rangeID >= 600 && rangeID <= 622:\n        this.setState({\n          icon: this.weatherIcon.Snow\n        });\n        break;\n\n      case rangeID >= 701 && rangeID <= 781:\n        this.setState({\n          icon: this.weatherIcon.Atmosphere\n        });\n        break;\n\n      case rangeID === 800:\n        this.setState({\n          icon: this.weatherIcon.Clear\n        });\n        break;\n\n      case rangeID >= 801 && rangeID <= 804:\n        this.setState({\n          icon: this.weatherIcon.Clouds\n        });\n        break;\n\n      default:\n        this.setState({\n          icon: this.weatherIcon.Clouds\n        });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Weather, {\n      city: this.state.city,\n      celsius: this.state.celsius,\n      temp_min: this.state.temp_min,\n      temp_max: this.state.temp_max,\n      description: this.state.description,\n      weatherIcon: this.state.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Meteo;","map":{"version":3,"sources":["/Users/chloe/Documents/Cours/ING4/Techno Web/PROJECT_WEB_OCRES/frontend/src/components/meteo/Meteo.jsx"],"names":["React","Weather","API_key","Meteo","Component","constructor","getWeather","api_call","fetch","response","json","console","log","setState","city","name","celsius","calCelsius","main","temp","temp_min","temp_max","description","weather","get_WeatherIcon","weatherIcon","id","state","undefined","icon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","cell","Math","floor","icons","rangeID","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport \"./Meteo.css\"\nimport Weather from './weather';\n\nconst API_key = \"923b8b8bfbca71d0369fd0505d99dcf4\"\n\nclass Meteo extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\"\n    }\n\n    this.getWeather();\n\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    }\n\n\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  get_WeatherIcon(icons, rangeID) {\n    switch (true) {\n      case rangeID >= 200 && rangeID <= 232:\n        this.setState({ icon: this.weatherIcon.Thunderstorm })\n        break;\n      case rangeID >= 300 && rangeID <= 321:\n        this.setState({ icon: this.weatherIcon.Drizzle })\n        break;\n      case rangeID >= 500 && rangeID <= 531:\n        this.setState({ icon: this.weatherIcon.Rain })\n        break;\n      case rangeID >= 600 && rangeID <= 622:\n        this.setState({ icon: this.weatherIcon.Snow })\n        break;\n      case rangeID >= 701 && rangeID <= 781:\n        this.setState({ icon: this.weatherIcon.Atmosphere })\n        break;\n      case rangeID === 800:\n        this.setState({ icon: this.weatherIcon.Clear })\n        break;\n      case rangeID >= 801 && rangeID <= 804:\n        this.setState({ icon: this.weatherIcon.Clouds })\n        break;\n      default:\n        this.setState({ icon: this.weatherIcon.Clouds })\n    }\n  }\n\n  getWeather = async () => {\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=Paris&appid=${API_key}`);\n\n    const response = await api_call.json();\n\n    console.log(response);\n\n    this.setState({\n      city: response.name,\n      celsius: this.calCelsius(response.main.temp),\n      temp_min: this.calCelsius(response.main.temp_min),\n      temp_max: this.calCelsius(response.main.temp_max),\n      description: response.weather[0].description,\n    })\n\n    this.get_WeatherIcon(this.weatherIcon,response.weather[0].id);\n   \n\n  }\n\n  state = {}\n  render() {\n    return (\n      <div><Weather city={this.state.city}\n        celsius={this.state.celsius}\n        temp_min={this.state.temp_min}\n        temp_max={this.state.temp_max}\n        description={this.state.description}\n      weatherIcon={this.state.icon} \n      /></div>\n\n    );\n  }\n}\n\nexport default Meteo;\n\n"]},"metadata":{},"sourceType":"module"}