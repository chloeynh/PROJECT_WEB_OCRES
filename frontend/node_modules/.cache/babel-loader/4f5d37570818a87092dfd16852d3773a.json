{"ast":null,"code":"import _slicedToArray from \"/Users/chloe/Documents/Cours/ING4/Techno Web/PROJECT_WEB_OCRES/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/chloe/Documents/Cours/ING4/Techno Web/PROJECT_WEB_OCRES/frontend/src/pages/home/Traduction.jsx\";\nimport React from 'react';\n\nconst Translate = require('@google-cloud/translate').v2.Translate;\n\nrequire('dotenv').config();\n\nconst CREDENTIALS = JSON.parse(process.env.CREDENTIALS);\nconst translate = new Translate({\n  credentials: CREDENTIALS,\n  projectId: CREDENTIALS.project_id\n});\n\nconst detectLanguage = async text => {\n  try {\n    let response = await translate.detect(text);\n    return response[0].language;\n  } catch (error) {\n    console.log('Error at detectLanguage --> ${error}');\n    return 0;\n  }\n};\n\nconst translateText = async (text, targetLanguage) => {\n  try {\n    let _ref = await translate.translate(text, targetLanguage),\n        _ref2 = _slicedToArray(_ref, 1),\n        response = _ref2[0];\n\n    return response;\n  } catch (error) {\n    console.log('Error at translateText --> ${error}');\n    return 0;\n  }\n};\n\nexport default class Traduction extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      target: \"en\",\n      text: \"\",\n      textTraduit: \"\"\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.translateText(this.state.text, this.state.target).then(res => {\n      this.setState(state => ({\n        textTraduit: res\n      }));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  handleClick() {\n    this.translateText(this.state.text, this.state.target).then(res => {\n      this.setState(state => ({\n        textTraduit: res\n      }));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      city: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"traduction\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"itemsTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Traduction\"), \"pd\");\n  }\n\n}","map":{"version":3,"sources":["/Users/chloe/Documents/Cours/ING4/Techno Web/PROJECT_WEB_OCRES/frontend/src/pages/home/Traduction.jsx"],"names":["React","Translate","require","v2","config","CREDENTIALS","JSON","parse","process","env","translate","credentials","projectId","project_id","detectLanguage","text","response","detect","language","error","console","log","translateText","targetLanguage","Traduction","Component","constructor","props","state","target","textTraduit","handleClick","bind","handleChange","componentDidMount","then","res","setState","catch","err","event","city","value","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst { Translate } = require('@google-cloud/translate').v2;\nrequire('dotenv').config();\n\nconst CREDENTIALS = JSON.parse(process.env.CREDENTIALS);\n\nconst translate = new Translate({\n    credentials: CREDENTIALS,\n    projectId: CREDENTIALS.project_id\n})\n\nconst detectLanguage = async (text) => {\n\n    try {\n        let response = await translate.detect(text);\n        return response[0].language;\n    } catch (error) {\n        console.log('Error at detectLanguage --> ${error}');\n        return 0;\n    }\n}\n\nconst translateText = async (text, targetLanguage) => {\n\n    try {\n        let [response] = await translate.translate(text, targetLanguage);\n        return response;\n    } catch (error) {\n        console.log('Error at translateText --> ${error}');\n        return 0;\n    }\n}\n\nexport default class Traduction extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state =\n        {\n            target: \"en\",\n            text: \"\",\n            textTraduit: \"\"\n        }\n        this.handleClick = this.handleClick.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n\n    }\n\n    componentDidMount() {\n        this.translateText(this.state.text, this.state.target)\n            .then((res) => {\n                this.setState(state =>({\n                    textTraduit: res\n                } ))\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n\n\n    handleClick() {\n        this.translateText(this.state.text, this.state.target)\n            .then((res) => {\n                this.setState(state =>({\n                    textTraduit: res\n                } ))\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n\n    }\n\n    handleChange(event) {\n        this.setState({ city: event.target.value })\n    }\n\n    render() {\n\n        return (\n            <div className=\"traduction\">\n                <span className=\"itemsTitle\">Traduction</span>\n                pd\n            </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}