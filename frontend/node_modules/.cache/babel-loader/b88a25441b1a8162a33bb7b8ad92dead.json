{"ast":null,"code":"// API : https://openweathermap.org/api\n// Clé api\nconst API_KEY = \"4081444b7b90198136fefe6ed4ccf35b\"; // Url API\n\nconst API_URL = \"https://api.openweathermap.org/data/2.5/weather\"; // Base source icon\n\nconst API_URL_ICON = \"http://openweathermap.org/img/wn/\"; // Url API 2\n\nconst API_URL2 = \"https://api.openweathermap.org/data/2.5/forecast/daily\";\n\nclass API_WEATHER {\n  constructor(city) {\n    // Si la ville n'est pas définit alors la ville par défault est Paris\n    if (city === \"\") {\n      city = \"paris\";\n    }\n\n    this.city = city;\n  } // Faire la requete à l'API openweathermap\n  // Retourne une promise \n\n\n  fetchTodayForecast() {\n    return axios.get(\"\".concat(API_URL, \"?q=\").concat(this.city, \"&units=metric&appid=\").concat(API_KEY), {\n      crossdomain: true\n    });\n  }\n\n  fetchThreeDaysForecast() {\n    return axios.get(\"\".concat(API_URL2, \"?q=\").concat(this.city, \"&cnt=\", 4, \"&appid=\").concat(API_KEY), {\n      crossdomain: true\n    });\n  } // Retourne l'element HTML de l'icon symbolisant la méteo.\n\n\n  getHTMLElementFromIcon(icon) {\n    return \"<img src=\".concat(API_URL_ICON).concat(icon, \"@2x.png class=\\\"weather-icon\\\"/>\");\n  }\n\n}","map":{"version":3,"sources":["/Users/chloe/Documents/Cours/ING4/Techno Web/PROJECT_WEB_OCRES/frontend/src/components/meteo/API_Weather.js"],"names":["API_KEY","API_URL","API_URL_ICON","API_URL2","API_WEATHER","constructor","city","fetchTodayForecast","axios","get","crossdomain","fetchThreeDaysForecast","getHTMLElementFromIcon","icon"],"mappings":"AAAA;AAEA;AACA,MAAMA,OAAO,GAAG,kCAAhB,C,CACA;;AACA,MAAMC,OAAO,GAAG,iDAAhB,C,CACA;;AACA,MAAMC,YAAY,GAAG,mCAArB,C,CACA;;AACA,MAAMC,QAAQ,GAAG,wDAAjB;;AAGA,MAAMC,WAAN,CAAiB;AACfC,EAAAA,WAAW,CAACC,IAAD,EAAM;AACf;AACA,QAAGA,IAAI,KAAK,EAAZ,EAAe;AACbA,MAAAA,IAAI,GAAG,OAAP;AACD;;AACD,SAAKA,IAAL,GAAYA,IAAZ;AACD,GAPc,CASf;AACA;;;AACAC,EAAAA,kBAAkB,GAAE;AAClB,WAAOC,KAAK,CACXC,GADM,WACCR,OADD,gBACc,KAAKK,IADnB,iCAC8CN,OAD9C,GACyD;AAC9DU,MAAAA,WAAW,EAAE;AADiD,KADzD,CAAP;AAID;;AAEDC,EAAAA,sBAAsB,GAAE;AACtB,WAAOH,KAAK,CACXC,GADM,WACCN,QADD,gBACe,KAAKG,IADpB,WACgC,CADhC,oBAC2CN,OAD3C,GACsD;AAC3DU,MAAAA,WAAW,EAAE;AAD8C,KADtD,CAAP;AAKD,GAxBc,CA0Bf;;;AACAE,EAAAA,sBAAsB,CAACC,IAAD,EAAM;AAC1B,8BAAmBX,YAAnB,SAAkCW,IAAlC;AACD;;AA7Bc","sourcesContent":["// API : https://openweathermap.org/api\n\n// Clé api\nconst API_KEY = \"4081444b7b90198136fefe6ed4ccf35b\";\n// Url API\nconst API_URL = \"https://api.openweathermap.org/data/2.5/weather\";\n// Base source icon\nconst API_URL_ICON = \"http://openweathermap.org/img/wn/\";\n// Url API 2\nconst API_URL2 = \"https://api.openweathermap.org/data/2.5/forecast/daily\";\n\n\nclass API_WEATHER{\n  constructor(city){\n    // Si la ville n'est pas définit alors la ville par défault est Paris\n    if(city === \"\"){\n      city = \"paris\";\n    }\n    this.city = city;\n  }\n\n  // Faire la requete à l'API openweathermap\n  // Retourne une promise \n  fetchTodayForecast(){\n    return axios\n    .get(`${API_URL}?q=${this.city}&units=metric&appid=${API_KEY}`, {\n      crossdomain: true\n    })\n  }\n\n  fetchThreeDaysForecast(){\n    return axios\n    .get(`${API_URL2}?q=${this.city}&cnt=${4}&appid=${API_KEY}`, {\n      crossdomain: true\n    })\n\n  }\n\n  // Retourne l'element HTML de l'icon symbolisant la méteo.\n  getHTMLElementFromIcon(icon){\n    return `<img src=${API_URL_ICON}${icon}@2x.png class=\"weather-icon\"/>`\n  }\n}"]},"metadata":{},"sourceType":"module"}