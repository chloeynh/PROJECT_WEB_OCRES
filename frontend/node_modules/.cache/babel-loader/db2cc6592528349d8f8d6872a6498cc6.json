{"ast":null,"code":"var _jsxFileName = \"/Users/chloe/Documents/Cours/ING4/Techno Web/PROJECT_WEB_OCRES/frontend/src/components/meteo/Meteo.jsx\";\nimport React from 'react';\nimport \"./Meteo.css\";\nimport Weather from './weather';\nconst API_key = \"923b8b8bfbca71d0369fd0505d99dcf4\";\n\nclass Meteo extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async () => {\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=Paris&appid=\".concat(API_key));\n      const response = await api_call.json();\n      console.log(response);\n      this.setState({\n        city: response.name,\n        celsius: this.calCelsius(response.main.temp),\n        temp_min: this.calCelsius(response.main.temp_min),\n        temp_max: this.calCelsius(response.main.temp_max)\n      });\n    };\n\n    this.state = {};\n    this.state = {\n      city: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\"\n    };\n    this.getWeather();\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Weather, {\n      city: this.state.city,\n      celsius: this.state.celsius,\n      temp_min: this.state.temp_min,\n      temp_max: this.state.temp_max,\n      description: this.state.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Meteo;\n{\n  /* <div className=\"meteo\">\n       <span className=\"itemsTitle\">Météo</span>\n       <div className=\"meteoContainer\">\n         <span className=\"meteoLocation\">Paris</span><br />\n         <span className=\"meteoTemperature\">5°C</span>\n       </div>\n     </div> */\n}","map":{"version":3,"sources":["/Users/chloe/Documents/Cours/ING4/Techno Web/PROJECT_WEB_OCRES/frontend/src/components/meteo/Meteo.jsx"],"names":["React","Weather","API_key","Meteo","Component","constructor","getWeather","api_call","fetch","response","json","console","log","setState","city","name","celsius","calCelsius","main","temp","temp_min","temp_max","state","undefined","icon","description","cell","Math","floor","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AACpCC,EAAAA,WAAW,GAAE;AACT;;AADS,SAmBbC,UAnBa,GAmBA,YAAY;AACrB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,wEAAiEN,OAAjE,EAA5B;AAEA,YAAMO,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEA,WAAKI,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAGL,QAAQ,CAACM,IADJ;AAEZC,QAAAA,OAAO,EAAG,KAAKC,UAAL,CAAgBR,QAAQ,CAACS,IAAT,CAAcC,IAA9B,CAFE;AAGZC,QAAAA,QAAQ,EAAG,KAAKH,UAAL,CAAgBR,QAAQ,CAACS,IAAT,CAAcE,QAA9B,CAHC;AAIZC,QAAAA,QAAQ,EAAG,KAAKJ,UAAL,CAAgBR,QAAQ,CAACS,IAAT,CAAcG,QAA9B;AAJC,OAAd;AAOH,KAjCY;;AAAA,SAmCTC,KAnCS,GAmCD,EAnCC;AAET,SAAKA,KAAL,GAAa;AACXR,MAAAA,IAAI,EAAGS,SADI;AAEXC,MAAAA,IAAI,EAAGD,SAFI;AAGXL,MAAAA,IAAI,EAAGK,SAHI;AAIXP,MAAAA,OAAO,EAAGO,SAJC;AAKXF,MAAAA,QAAQ,EAAGE,SALA;AAMXH,MAAAA,QAAQ,EAAGG,SANA;AAOXE,MAAAA,WAAW,EAAG;AAPH,KAAb;AASA,SAAKnB,UAAL;AACH;;AAEDW,EAAAA,UAAU,CAACE,IAAD,EAAO;AACf,QAAIO,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWT,IAAI,GAAG,MAAlB,CAAX;AACA,WAAOO,IAAP;AACD;;AAmBGG,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAE,KAAKP,KAAL,CAAWR,IAA1B;AACL,MAAA,OAAO,EAAE,KAAKQ,KAAL,CAAWN,OADf;AAEL,MAAA,QAAQ,EAAE,KAAKM,KAAL,CAAWF,QAFhB;AAGL,MAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWD,QAHhB;AAIL,MAAA,WAAW,EAAE,KAAKC,KAAL,CAAWG,WAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,CADJ;AAQH;;AA9C+B;;AAiDpC,eAAetB,KAAf;AAEA;AAAC;;;;;;;AAMa","sourcesContent":["import React from 'react'\nimport \"./Meteo.css\"\nimport Weather from './weather';\n\nconst API_key = \"923b8b8bfbca71d0369fd0505d99dcf4\"\n\nclass Meteo extends React.Component {\nconstructor(){\n    super();\n    this.state = {\n      city : undefined,\n      icon : undefined,\n      main : undefined,\n      celsius : undefined,\n      temp_max : undefined,\n      temp_min : undefined,\n      description : \"\"\n    }\n    this.getWeather();\n}\n\ncalCelsius(temp) {\n  let cell = Math.floor(temp - 273.15);\n  return cell;\n}\n\ngetWeather = async () => {\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=Paris&appid=${API_key}`);\n\n    const response = await api_call.json();\n\n    console.log(response);\n\n    this.setState({\n      city : response.name,\n      celsius : this.calCelsius(response.main.temp),\n      temp_min : this.calCelsius(response.main.temp_min),\n      temp_max : this.calCelsius(response.main.temp_max)\n    })\n\n}\n\n    state = {}\n    render() {\n        return(\n            <div><Weather city={this.state.city} \n            celsius={this.state.celsius} \n            temp_min={this.state.temp_min} \n            temp_max={this.state.temp_max} \n            description={this.state.description}/></div>\n                    \n        );\n    }\n}\n\nexport default Meteo;\n\n{/* <div className=\"meteo\">\n      <span className=\"itemsTitle\">Météo</span>\n      <div className=\"meteoContainer\">\n        <span className=\"meteoLocation\">Paris</span><br />\n        <span className=\"meteoTemperature\">5°C</span>\n      </div>\n    </div> */}"]},"metadata":{},"sourceType":"module"}