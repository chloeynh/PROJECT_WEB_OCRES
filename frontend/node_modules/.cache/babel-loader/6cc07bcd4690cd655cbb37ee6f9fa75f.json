{"ast":null,"code":"\"use strict\"; // Copyright 2020 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IdTokenClient = void 0;\n\nconst oauth2client_1 = require(\"./oauth2client\");\n\nclass IdTokenClient extends oauth2client_1.OAuth2Client {\n  /**\n   * Google ID Token client\n   *\n   * Retrieve access token from the metadata server.\n   * See: https://developers.google.com/compute/docs/authentication\n   */\n  constructor(options) {\n    super();\n    this.targetAudience = options.targetAudience;\n    this.idTokenProvider = options.idTokenProvider;\n  }\n\n  async getRequestMetadataAsync( // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  url) {\n    if (!this.credentials.id_token || (this.credentials.expiry_date || 0) < Date.now()) {\n      const idToken = await this.idTokenProvider.fetchIdToken(this.targetAudience);\n      this.credentials = {\n        id_token: idToken,\n        expiry_date: this.getIdTokenExpiryDate(idToken)\n      };\n    }\n\n    const headers = {\n      Authorization: 'Bearer ' + this.credentials.id_token\n    };\n    return {\n      headers\n    };\n  }\n\n  getIdTokenExpiryDate(idToken) {\n    const payloadB64 = idToken.split('.')[1];\n\n    if (payloadB64) {\n      const payload = JSON.parse(Buffer.from(payloadB64, 'base64').toString('ascii'));\n      return payload.exp * 1000;\n    }\n  }\n\n}\n\nexports.IdTokenClient = IdTokenClient;","map":null,"metadata":{},"sourceType":"script"}