{"ast":null,"code":"var _jsxFileName = \"/Users/chloe/Documents/Cours/ING4/Techno Web/PROJECT_WEB_OCRES/frontend/src/components/meteo/Meteo.jsx\";\nimport React from 'react';\nimport \"./Meteo.css\";\nimport Weather from './weather';\nconst API_key = \"923b8b8bfbca71d0369fd0505d99dcf4\";\n\nclass Meteo extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=Paris&appid=\".concat(API_key));\n      const response = await api_call.json();\n      console.log(response);\n      this.setState({\n        city: response.name,\n        celsius: this.calCelsius(response.main.temp),\n        temp_min: this.calCelsius(response.main.temp_min),\n        temp_max: this.calCelsius(response.main.temp_max),\n        description: response.weather[0].description\n      });\n      this.get_WeatherIcon(this.icon, response.weather[0].id);\n    };\n\n    this.state = {};\n    this.state = {\n      city: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\"\n    };\n    this.getWeather();\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    };\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  get_WeatherIcon(icon, rangeID) {\n    switch (true) {\n      case rangeID >= 200 && rangeID <= 232:\n        this.setState({\n          icon: this.weatherIcon.Thunderstorm\n        });\n        break;\n\n      case rangeID >= 300 && rangeID <= 321:\n        this.setState({\n          icon: this.weatherIcon.Drizzle\n        });\n        break;\n\n      case rangeID >= 500 && rangeID <= 531:\n        this.setState({\n          icon: this.weatherIcon.Rain\n        });\n        break;\n\n      case rangeID >= 600 && rangeID <= 622:\n        this.setState({\n          icon: this.weatherIcon.Snow\n        });\n        break;\n\n      case rangeID >= 701 && rangeID <= 781:\n        this.setState({\n          icon: this.weatherIcon.Atmosphere\n        });\n        break;\n\n      case rangeID === 800:\n        this.setState({\n          icon: this.weatherIcon.Clear\n        });\n        break;\n\n      case rangeID >= 801 && rangeID <= 804:\n        this.setState({\n          icon: this.weatherIcon.Clouds\n        });\n        break;\n\n      default:\n        this.setState({\n          icon: this.weatherIcon.Clouds\n        });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.props.loadweather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"test\",\n      className: \"form-control\",\n      name: \"city\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"bouton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Get Weather\"))))), React.createElement(Weather, {\n      city: this.state.city,\n      celsius: this.state.celsius,\n      temp_min: this.state.temp_min,\n      temp_max: this.state.temp_max,\n      description: this.state.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Meteo;","map":{"version":3,"sources":["/Users/chloe/Documents/Cours/ING4/Techno Web/PROJECT_WEB_OCRES/frontend/src/components/meteo/Meteo.jsx"],"names":["React","Weather","API_key","Meteo","Component","constructor","getWeather","e","preventDefault","city","target","elements","value","api_call","fetch","response","json","console","log","setState","name","celsius","calCelsius","main","temp","temp_min","temp_max","description","weather","get_WeatherIcon","icon","id","state","undefined","weatherIcon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","cell","Math","floor","rangeID","render","props","loadweather"],"mappings":"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","sourcesContent":["import React from 'react'\nimport \"./Meteo.css\"\nimport Weather from './weather';\n\nconst API_key = \"923b8b8bfbca71d0369fd0505d99dcf4\"\n\nclass Meteo extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\"\n    }\n\n    this.getWeather();\n\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    }\n\n\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  get_WeatherIcon(icon, rangeID) {\n    switch (true) {\n      case rangeID >= 200 && rangeID <= 232:\n        this.setState({ icon: this.weatherIcon.Thunderstorm })\n        break;\n      case rangeID >= 300 && rangeID <= 321:\n        this.setState({ icon: this.weatherIcon.Drizzle })\n        break;\n      case rangeID >= 500 && rangeID <= 531:\n        this.setState({ icon: this.weatherIcon.Rain })\n        break;\n      case rangeID >= 600 && rangeID <= 622:\n        this.setState({ icon: this.weatherIcon.Snow })\n        break;\n      case rangeID >= 701 && rangeID <= 781:\n        this.setState({ icon: this.weatherIcon.Atmosphere })\n        break;\n      case rangeID === 800:\n        this.setState({ icon: this.weatherIcon.Clear })\n        break;\n      case rangeID >= 801 && rangeID <= 804:\n        this.setState({ icon: this.weatherIcon.Clouds })\n        break;\n      default:\n        this.setState({ icon: this.weatherIcon.Clouds })\n    }\n  }\n\n  getWeather = async (e) => {\n\n    e.preventDefault();\n\n    const city = e.target.elements.city.value;\n\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=Paris&appid=${API_key}`);\n\n    const response = await api_call.json();\n\n    console.log(response);\n\n    this.setState({\n      city: response.name,\n      celsius: this.calCelsius(response.main.temp),\n      temp_min: this.calCelsius(response.main.temp_min),\n      temp_max: this.calCelsius(response.main.temp_max),\n      description: response.weather[0].description,\n    });\n\n    this.get_WeatherIcon(this.icon, response.weather[0].id);\n\n\n  };\n\n  state = {}\n  render() {\n    return (\n      <div>\n        <div className=\"container\">\n          <form onSubmit={this.props.loadweather}>\n            <div className=\"row\">\n              <div className=\"\">\n                <input type=\"test\" className=\"form-control\" name=\"city\" />\n              </div>\n              <div className=\"\">\n                <button className=\"bouton\">Get Weather</button>\n              </div>\n            </div>\n          </form>\n        </div>\n        <Weather city={this.state.city}\n          celsius={this.state.celsius}\n          temp_min={this.state.temp_min}\n          temp_max={this.state.temp_max}\n          description={this.state.description}\n\n        /></div>\n\n    );\n  }\n}\n\nexport default Meteo;\n\n"]},"metadata":{},"sourceType":"module"}